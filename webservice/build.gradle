buildscript {
	ext {
		springBootVersion = '2.0.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'

bootWar.enabled = false

war {
    enabled = true
    archiveName = 'va-synthea.war'
}

war << {
	exec {
        workingDir 'build/libs'
        commandLine 'zip', '-d', "${archiveName}", 'WEB-INF/lib/va-synthea.jar' // Don't include the Synthea JAR since we are unpacking it into the web service WAR
    }
}

group = 'va-synthea-webservice'
version = '0.0.1'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven {
    	url "https://oss.sonatype.org/content/repositories/snapshots"
  	}
}

// Unpack Synthea JAR into the web service WAR in order to facilitate the loading of Synthea JSON modules
task unzipSynthea(type: Copy) {
   from zipTree("../build/libs/va-synthea.jar")
   into "build/classes/java/main"
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-websocket')
	compile('org.json:json:20180813')
	compile('org.apache.httpcomponents:httpclient:4.5.6')
	compile('org.apache.httpcomponents:httpcore:4.4.10')
	compile group: 'commons-logging', name: 'commons-logging', version: '1.2'
	compile rootProject
	compileJava.dependsOn unzipSynthea
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

configurations {
	
	// Excluding the auto-included logging here to avoid conflict with existing VA Synthea logging support
    compile.exclude module: 'spring-boot-starter-logging'
}
